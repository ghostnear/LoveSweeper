name: LoveSweeper CI

on:
  push:
    branches: [main]
    tags: [pre*, v*]
  pull_request:
    branches: [main]

env:
  BUILD_TYPE: ${{ fromJSON('["dev", "release"]')[startsWith(github.ref, 'refs/tags/v')] }}
  CORE_LOVE_PACKAGE_PATH: ./ghn_lovesweeper.love
  CORE_LOVE_ARTIFACT_NAME: ghn_lovesweeper
  ICON_PATH: /assets/icon.png
  APP_NAME: LoveSweeper
  APP_VERSION: "1.0.0"
  APP_DESCRIPTION: Implementation of MineSweeper made in Love2D. 
  PRODUCT_NAME: LoveSweeper
  BUNDLE_ID: org.GhostNear.LoveSweeper

jobs:
  build-core:
    runs-on: ubuntu-latest
    env:
      OUTPUT_FOLDER: ./build
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Build core Love2D package
        uses: love-actions/love-actions-core@v1
        with:
          build-list: ./conf.lua ./main.lua
          package-path: ${{ env.CORE_LOVE_PACKAGE_PATH }}
      - name: Upload core love package
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.CORE_LOVE_ARTIFACT_NAME }}
          path: ${{ env.CORE_LOVE_PACKAGE_PATH }}
  build-linux:
    runs-on: ubuntu-latest
    needs: [build-core]
    env:
      OUTPUT_FOLDER: ./build
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Download core Love package
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.CORE_LOVE_ARTIFACT_NAME }}
      - name: Build Linux packages
        id: build-packages
        uses: love-actions/love-actions-linux@v1
        with:
          app-name: ${{ env.APP_NAME }}
          bundle-id: ${{ env.BUNDLE_ID }}
          description: ${{ env.APP_DESCRIPTION }}
          version-string: "${{ env.APP_VERSION }}"
          icon-path: ./.github/build/linux/${{ env.BUILD_TYPE }}/${{ env.ICON_PATH }}
          love-package: ${{ env.CORE_LOVE_PACKAGE_PATH }}
          product-name: ${{ env.PRODUCT_NAME }}
          output-folder: ${{ env.OUTPUT_FOLDER }}
      - name: Upload AppImage artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ needs.get-info.outputs.base-name }}_Linux_AppImage
          path: ${{ env.OUTPUT_FOLDER }}/${{ env.PRODUCT_NAME }}.AppImage